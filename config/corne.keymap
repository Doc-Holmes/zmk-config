
  /*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

  #include <behaviors.dtsi>
  #include <dt-bindings/zmk/keys.h>
  #include <dt-bindings/zmk/bt.h>
  #include <dt-bindings/zmk/matrix_transform.h>

  / {

    keymap {
      compatible = "zmk,keymap";
      default_layer { // Layer 0
          display-name = "Base";
          bindings = <
            &kp TAB          &kp Q &kp W &kp F          &kp P     &kp B &kp J &kp L     &kp U         &kp Y   &kp SEMICOLON &kp BACKSPACE
            &kp ESCAPE       &kp A &kp R &kp S          &kp T     &kp G &kp M &kp N     &kp E         &kp I   &kp O         &kp DELETE
            &kp LEFT_CONTROL &kp Z &kp X &kp C          &kp D     &kp V &kp K &kp H     &kp COMMA     &kp DOT &kp MINUS     &kp LEFT_ALT
                                         &kp LEFT_SHIFT &kp ENTER &mo 2 &mo 1 &kp SPACE &kp RIGHT_GUI
          >;
        };

      navigation { // Layer 1
          display-name = "Navigation";
          bindings = <
            &none            &none     &none             &kp HOME       &kp PAGE_UP   &none &kp CARET &none    &none  &kp DOLLAR &none &kp BACKSPACE
            &none            &kp TILDE &kp DOUBLE_QUOTES &kp END        &kp PAGE_DOWN &none &kp LEFT  &kp DOWN &kp UP &kp RIGHT  &none &kp DELETE
            &kp LEFT_CONTROL &none     &none             &kp LEFT_SHIFT &kp LEFT_GUI  &none &none     &none    &none  &none      &none &none
                                                         &kp SPACE      &kp ENTER     &mo 3 &trans    &none    &none
          >;
        };

      symbol { // Layer 2
          display-name = "Cymbal";
          bindings = <
            &kp CARET      &kp N1    &kp N2         &kp N3           &kp N4               &kp N5      &kp N6   &kp N7                &kp N8            &kp N9          &kp N0        &kp BACKSPACE
            &kp PLUS       &kp SLASH &kp LEFT_BRACE &kp LEFT_BRACKET &kp LEFT_PARENTHESIS &kp LT      &kp GT   &kp RIGHT_PARENTHESIS &kp RIGHT_BRACKET &kp RIGHT_BRACE &kp BACKSLASH &kp SINGLE_QUOTE
            &kp LEFT_SHIFT &kp EXCL  &kp ASTRK      &kp GRAVE        &kp DOLLAR           &kp PERCENT &kp AMPS &kp QUESTION          &kp HASH          &kp PIPE        &kp AT        &kp EQUAL
                                                    &none            &none                &trans      &mo 3    &kp SPACE             &kp LEFT_CONTROL
          >;
        };

      os { // Layer 3
          display-name = "OS";
          bindings = <
            &kp F1 &kp F2               &kp F3               &kp F4              &kp F5           &kp F6 &kp F7         &kp F8           &kp F9            &kp F10 &kp F11 &kp F12
            &none  &kp C_BRIGHTNESS_DEC &kp C_BRIGHTNESS_INC &kp C_AC_BACK       &kp C_AC_FORWARD &none  &kp C_NEXT     &kp C_PLAY_PAUSE &kp C_MUTE        &none   &none   &none
            &none  &none                &none                &kp C_AL_CALCULATOR &none            &none  &kp C_PREVIOUS &kp C_VOLUME_UP  &kp C_VOLUME_DOWN &tog 4  &tog 5  &tog 6
                                                             &none               &none            &trans &trans         &none            &none
          >;
        };

      //qwerty { // Layer 4
      //    display-name = "QWERTY";
      //    bindings = <
      //      &kp ESCAPE       &kp Q &kp W &kp E          &kp R     &kp T &kp Y &kp U     &kp I        &kp O   &kp P         &kp BACKSPACE
      //      &kp TAB          &kp A &kp S &kp D          &kp F     &kp G &kp H &kp J     &kp K        &kp L   &kp SEMICOLON &to 0
      //      &kp LEFT_CONTROL &kp Z &kp X &kp C          &kp V     &kp B &kp N &kp M     &kp COMMA    &kp DOT &kp SLASH     &kp LEFT_ALT
      //                                   &kp LEFT_SHIFT &kp ENTER &mo 2 &mo 1 &kp SPACE &kp LEFT_GUI
      //    >;
      //  };
    };


    chosen {
      zmk,kscan = &kscan0;
      zmk,matrix-transform = &dactyl_transform;
    };

    // Set diode direction to the direction the dactyl pcb uses
    kscan0: kscan {
      compatible = "zmk,kscan-gpio-matrix";
      diode-direction = "row2col";

      row-gpios
        = <&pro_micro 4 GPIO_ACTIVE_HIGH>
        , <&pro_micro 5 GPIO_ACTIVE_HIGH>
        , <&pro_micro 6 GPIO_ACTIVE_HIGH>
        , <&pro_micro 7 GPIO_ACTIVE_HIGH>
        ;

      col-gpios
        = <&pro_micro 21 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>
        , <&pro_micro 20 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>
        , <&pro_micro 19 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>
        , <&pro_micro 18 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>
        , <&pro_micro 15 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>
        , <&pro_micro 14 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>
        ;
    };

    dactyl_transform: matrix_transform {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
          RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)  RC(0,11) RC(0,10) RC(0,9) RC(0,8) RC(0,7) RC(0,6)
          RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)  RC(1,11) RC(1,10) RC(1,9) RC(1,8) RC(1,7) RC(1,6)
          RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)  RC(2,11) RC(2,10) RC(2,9) RC(2,8) RC(2,7) RC(2,6)
                                  RC(3,3) RC(3,4) RC(3,1)  RC(3,6) RC(3,10) RC(3,9)
        >;
    };

  };
